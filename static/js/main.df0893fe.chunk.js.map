{"version":3,"sources":["services/UserService.js","utils/Utils.js","components/common/TextInput.js","components/login/LoginForm.js","utils/Messages.js","utils/Validation.js","components/login/LoginPage.js","components/PageNotFound.js","components/common/Header.js","App.js","index.js"],"names":["saveUser","user","axios","post","then","res","catch","err","error","message","initialUserState","fname","lname","email","password","sleep","ms","Promise","resolve","setTimeout","TextInput","name","type","title","onChange","placeholder","value","className","htmlFor","id","required","LoginForm","apiCallStatus","onSave","errors","onSubmit","noValidate","disabled","messages","FIRST_NAME_MISSING","LAST_NAME_MISSING","PASSWORD_MISSING","EMAIL_MISSING","EMAIL_INVALID","PASSWORD_INVALID","validateUserForm","RegExp","test","validateEmail","includes","validatePasswordPattern","LoginPage","useState","setUser","setErrors","apiCallInProgress","setApiCallInProgress","postUser","a","payload","firstName","lastName","saveCall","waitScreen","getCall","userAPI","resSaveUser","console","log","toast","status","success","get","resGetUser","data","isFormValid","Object","keys","length","event","target","preventDefault","PageNotFound","Header","src","alt","App","path","component","autoClose","hideProgress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df0893fe.chunk.js","sourcesContent":["import axios from 'axios';\n\n/**\n * Make the save api call\n * @param  {} user\n */\nexport function saveUser(user) {\n  return axios\n    .post('https://demo-api.now.sh/users', user)\n    .then((res) => res)\n    .catch((err) => ({\n      error: err.message,\n    }));\n}\n\n/**\n * Get the user details\n */\nexport function getUser() {\n  return axios\n    .get('https://demo-api.now.sh/users')\n    .then((res) => res)\n    .catch((err) => ({\n      error: err.message,\n    }));\n}\n","//initial user state\nexport const initialUserState = {\n  fname: '',\n  lname: '',\n  email: '',\n  password: '',\n};\n\n/**\n * Sleep the process for provided 'ms'\n * @param  {} ms\n */\nexport function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import React from 'react';\n\n/**\n * Dump component\n * @param  {} {name ==> Name of the input box\n * @param  {} type ==> Type of the input box\n * @param  {} title ==> Title of the component\n * @param  {} onChange ==> Input text box change handler\n * @param  {} placeholder ==> Placeholder for the input box\n * @param  {} error ==> Error message, if there\n * @param  {} value ==> Value of the input box\n * @param  {} }\n */\nconst TextInput = ({\n  name,\n  type,\n  title,\n  onChange,\n  placeholder,\n  error,\n  value,\n}) => {\n  return (\n    <div className=\"mb-5\">\n      <label htmlFor={'input_' + name}>{title}</label>\n      <input\n        type={type}\n        name={name}\n        id={'input_' + name}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        required\n        className={`form-control ${error ? 'is-invalid' : ''}`}\n      ></input>\n      <div className=\"invalid-feedback\">{error}</div>\n    </div>\n  );\n};\n\nexport default TextInput;\n","import TextInput from '../common/TextInput';\n/**\n * Dump component\n * @param  {} {apiCallStatus ==> API status, true false\n * @param  {} user ==> user\n * @param  {} onChange ==> Form input handler\n * @param  {} onSave ==> Form save handler\n * @param  {} errors} ==> Errors on the form\n */\nconst LoginForm = ({ apiCallStatus, user, onChange, onSave, errors }) => {\n  return (\n    <form\n      onSubmit={onSave}\n      noValidate\n      className=\"d-flex flex-column align-items-center\"\n    >\n      <div className=\"col-md-4 col-sm-10\">\n        <TextInput\n          type=\"input\"\n          name=\"fname\"\n          title=\"First Name\"\n          placeholder=\"First name\"\n          onChange={onChange}\n          value={user.fname}\n          error={errors.fname}\n        ></TextInput>\n\n        <TextInput\n          type=\"input\"\n          name=\"lname\"\n          title=\"Last Name\"\n          placeholder=\"Last name\"\n          onChange={onChange}\n          value={user.lname}\n          error={errors.lname}\n        ></TextInput>\n\n        <TextInput\n          type=\"text\"\n          name=\"password\"\n          title=\"Password\"\n          placeholder=\"Password\"\n          onChange={onChange}\n          value={user.password}\n          error={errors.password}\n        ></TextInput>\n\n        <TextInput\n          type=\"email\"\n          name=\"email\"\n          title=\"Email\"\n          placeholder=\"Email address\"\n          onChange={onChange}\n          value={user.email}\n          error={errors.email}\n        ></TextInput>\n        <button\n          className=\"btn btn btn-primary btn-lg col shadow mb-4\"\n          type=\"submit\"\n          disabled={apiCallStatus}\n        >\n          {apiCallStatus ? 'Saving...' : 'Save'}\n        </button>\n      </div>\n    </form>\n  );\n};\nexport default LoginForm;\n","export const messages = {\n  SAVE_USER_SUCCESS: 'User saved successfully!',\n  ERROR: {\n    FIRST_NAME_MISSING: 'Please enter First name.',\n    LAST_NAME_MISSING: 'Please enter Last name.',\n    PASSWORD_MISSING: 'Please enter Password.',\n    EMAIL_MISSING: 'Please enter Email.',\n    EMAIL_INVALID: 'Please enter valid Email .',\n    PASSWORD_INVALID: `Password should not include First or Last name.\n        Password Should contain minimum 8 character and\n        should include one capital and one small letter.`,\n  },\n};\n","import { messages } from './Messages';\n\n/**\n * Validate the form\n * @param  {} user\n */\nexport function validateUserForm(user) {\n  const { fname, lname, password, email } = user;\n  const errors = {};\n  if (!fname) errors.fname = messages.ERROR.FIRST_NAME_MISSING;\n  if (!lname) errors.lname = messages.ERROR.LAST_NAME_MISSING;\n  if (!email) errors.email = messages.ERROR.EMAIL_MISSING;\n  if (email && !validateEmail(email))\n    errors.email = messages.ERROR.EMAIL_INVALID;\n\n  if (!password) errors.password = messages.ERROR.PASSWORD_MISSING;\n  if (password && !validatePasswordPattern(password, fname, lname))\n    errors.password = messages.ERROR.PASSWORD_INVALID;\n  return errors;\n}\n\n/**\n * Used to validate the email\n * @param  {} email\n */\nfunction validateEmail(email) {\n  const pattern = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$';\n  const patternRegExp = new RegExp(pattern);\n  return patternRegExp.test(email);\n}\n\n/**\n * Validate the password:\n * Should not contain the first name\n * Should not contain the last name\n * Should contain minimum 8 char including one capital and one small char\n * @param  {} password\n * @param  {} fname\n * @param  {} lname\n */\nfunction validatePasswordPattern(password, fname, lname) {\n  if (password.includes(fname)) return false;\n  if (password.includes(lname)) return false;\n  return /^(?=.*?[A-Z])(?=.*?[a-z]).{8,}$/.test(password);\n}\n","import { useState } from 'react';\nimport * as userAPI from '../../services/UserService';\nimport { sleep, initialUserState } from '.././../utils/Utils';\nimport LoginForm from './LoginForm';\nimport { toast } from 'react-toastify';\nimport { validateUserForm } from '../../utils/Validation';\nimport { messages } from '../../utils/Messages';\n\n/**\n * Login page ==> smart component\n * Used to handle the state update, errors, api calls\n */\nconst LoginPage = () => {\n  const [user, setUser] = useState(initialUserState);\n  const [errors, setErrors] = useState({});\n  const [apiCallInProgress, setApiCallInProgress] = useState(false);\n\n  /**\n   * update the user fields\n   * @param  {} event\n   */\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setUser((user) => ({\n      ...user,\n      [name]: value,\n    }));\n  };\n\n  /**\n   * Save handler for user form\n   * @param  {} event\n   */\n  const onSaveHandler = (event) => {\n    event.preventDefault();\n    if (!isFormValid()) return;\n    postUser();\n  };\n\n  /**\n   * Post the user data\n   */\n  const postUser = async () => {\n    const payload = {\n      firstName: user.fname,\n      lastName: user.lname,\n      email: user.email,\n    };\n    await saveCall(payload);\n    await waitScreen();\n    await getCall();\n  };\n\n  /**\n   * async save call\n   * @param  {} payload\n   */\n  const saveCall = async (payload) => {\n    setApiCallInProgress(true);\n    const resSaveUser = await userAPI.saveUser(payload);\n    console.log(resSaveUser);\n    setApiCallInProgress(false);\n    if (resSaveUser.error) return toast.error(resSaveUser.error);\n    if (resSaveUser.status === 200) toast.success(messages.SAVE_USER_SUCCESS);\n  };\n\n  /**\n   * Wait for 4 sec\n   */\n  const waitScreen = async () => {\n    setApiCallInProgress(true);\n    await sleep(4000);\n    setApiCallInProgress(false);\n  };\n\n  /**\n   * async get user call\n   */\n  const getCall = async () => {\n    setApiCallInProgress(true);\n    const resGetUser = await userAPI.getUser();\n    setApiCallInProgress(false);\n    if (resGetUser.error) return toast.error(resGetUser.error);\n    if (resGetUser.data) toast.success('User retrieved successfully!');\n  };\n\n  /**\n   * Validate the form\n   */\n  const isFormValid = () => {\n    const errors = validateUserForm(user);\n    setErrors(errors);\n    console.log(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  /**\n   * Login form\n   */\n  return (\n    <LoginForm\n      user={user}\n      onChange={onChangeHandler}\n      onSave={onSaveHandler}\n      errors={errors}\n      apiCallStatus={apiCallInProgress}\n    ></LoginForm>\n  );\n};\nexport default LoginPage;\n","import React from 'react';\nconst PageNotFound = () => <h1>Oops! Page not found</h1>;\nexport default PageNotFound;\n","import React from 'react';\n\n/*\n * Header component\n */\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-warning mb-5 shadow\">\n      <img\n        src=\"/rabo_react_FE/rabobank_logo.png\"\n        className=\"logo \"\n        alt=\"Rabo bank Logo\"\n      ></img>\n      <h3 className=\"p-2 d-none d-md-block \">RABO Bank Registration Form</h3>\n    </nav>\n  );\n};\nexport default Header;\n","import LoginPage from './components/login/LoginPage';\nimport { Route, Switch } from 'react-router-dom';\nimport PageNotFound from './components/PageNotFound';\nimport Header from './components/common/Header';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nfunction App() {\n  return (\n    <>\n      <Header> </Header>\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" component={LoginPage}></Route>\n          <Route component={PageNotFound}></Route>\n        </Switch>\n      </div>\n      <ToastContainer autoClose={3000} hideProgress></ToastContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}